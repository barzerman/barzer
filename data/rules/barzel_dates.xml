<?xml version="1.0" encoding="UTF-8"?>
<stmset xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
    xmlns="http://www.barzer.net/barzel/0.1">
    
    <stmt m="month-names">
        <pat>
           <any>
            <t>january</t><t>jan</t>
            <t>february</t><t>feb</t>
            <t>march</t><t>mar</t>
            <t>april</t><t>apr</t>
            <t>may</t>
            <t>june</t><t>jun</t>
            <t>july</t><t>jul</t>
            <t>august</t><t>aug</t>
            <t>september</t><t>sep</t>
            <t>october</t><t>oct</t>
            <t>november</t><t>nov</t>
            <t>december</t><t>dec</t>
            </any>
        </pat>    
    </stmt>
    <stmt m="weekdays">
        <pat>
            <any>
                <t>monday</t>
                <t>tuesday</t>
                <t>wednesday</t>
                <t>thursday</t>
                <t>friday</t>
                <t>saturday</t>
                <t>sunday</t>
                <t>mon</t><t>tue</t><t>wed</t><t>thu</t><t>fri</t><t>sat</t><t>sun</t>
            </any>        
        </pat>
    </stmt>
    <stmt m="numeral-suffices">
        <pat>
            <any><t>nd</t><t>rd</t><t>st</t><t>th</t></any>
        </pat>
    </stmt>
    <stmt>
        <pat>
            <any v="day"><t>today</t><t>yesterday</t><t>tomorrow</t></any>
        </pat>
        <tran>
            <func name="mkDay">
            <select v="day">
            <case l="today"><rn v="0" /></case>
            <case l="yesterday"><rn v="-1" /></case>
            <case l="tomorrow"><rn v="1" /></case>
            </select>
            </func>
        </tran>
    </stmt>
    <stmt>
        <pat>
            <n l="1900" h="2100"/><p>/</p><n l="1" h="12"/><p>/</p><n l="1" h="31"/>
        </pat>
        <tran><func name="mkDate"><var pn="5" /><var pn="3" /><var pn="1" /></func></tran>
    </stmt>
    <stmt>
        <pat>
            <n l="1" h="12"/><p>/</p><n l="1" h="31"/><p>/</p><n l="1900" h="2100"/>
        </pat>
        <tran><func name="mkDate"><var pn="1" /><var pn="3" /><var pn="5" /></func></tran>
    </stmt>
    <stmt>
        <pat>
	        <list v="day"><n l="1" h="31" /></list>d
	        <opt><expand n="numeral-suffices" /></opt>
	        <t>of</t>
	        <list v="mon"><expand n="month-names" /></list>
        </pat>
        <tran>
            <var name="mon"/><var name="day" />
        </tran>
    </stmt>
    <stmt>
        <pat>
            <list v="mon"><expand n="month-names" /></list>
            <list v="day"><n l="1" h="31" /></list>
            <opt><expand n="numeral-suffices" /></opt>
            <opt><p>,</p></opt>
            <list v="year"><n l="1900" h="2100" /></list>
        </pat>
        <tran>
            <func name="mkDate">
                <var name="day" />
                <func name="lookupMonth"><var name="mon" /></func>
                <var name="year" />
            </func>
        </tran>
    </stmt>
    <stmt>
        <pat>
            <list v="mon"><expand n="month-names" /></list>
            <list v="day"><n l="1" h="31" /></list>
            <opt><expand n="numeral-suffices" /></opt>
        </pat>
        <tran>
            <func name="mkDate">
                <var name="day" />
                <func name="lookupMonth"><var name="mon" /></func>
            </func>
        </tran>
    </stmt>    
    <stmt>
        <pat>
            <list v="hh"><n l="1" h="12" /></list>
            <p>:</p>
            <list v="mm"><n l="0" h="59" /></list>
            <opt>
                <list>
                    <p>:</p>
                 <list v="ss"><n l="0" h="59" /></list>
                </list>
            </opt>
            <any>
                <t>pm</t>
                <list><t>p</t><p>.</p><t>m</t><opt><p>.</p></opt></list>
            </any>
        </pat>
        <tran>
            <func name="mkTime">
                <func name="opPlus"><var name="hh" /><rn v="12" /></func>
                <var name="mm" />
                <var name="ss" />
            </func>
        </tran>
    </stmt>
    
    <stmt>
        <pat>
            <list v="hh"><n l="0" h="23" /></list>
            <p>:</p>
            <list v="mm"><n l="0" h="59" /></list>
            <opt>
                <list>
                    <p>:</p>
                    <list v="ss"><n l="0" h="59" /></list>
                </list>
            </opt>
            <opt>
                <any>
                <t>am</t>
                <list><t>a</t><p>.</p><t>m</t><opt><p>.</p></opt></list>
                </any>
            </opt>
        </pat>    
        <tran>
            <func name="mkTime">
                <var name="hh" />
                <var name="mm" />
                <var name="ss" />
            </func>
        </tran>
    </stmt>
    <stmt>
        <pat>
            <list v="hh"><n l="1" h="12" /></list>
            <any>
                <t>am</t>
                <list><t>a</t><p>.</p><t>m</t><opt><p>.</p></opt></list>
            </any>
        </pat>
        <tran>
            <func name="mkTime"><var name="hh" /></func>
        </tran>    
    </stmt>
    <stmt>
        <pat>
            <list v="hh"><n l="1" h="12" /></list>
            <any>
                <t>pm</t>
                <list><t>p</t><p>.</p><t>m</t><opt><p>.</p></opt></list>
            </any>
        </pat>
        <tran>
            <func name="mkTime">
                <func name="opPlus"><var name="hh" /><rn v="12" /></func>
            </func>
        </tran>
    </stmt>

    <stmt>
        <pat>
	        <list v="date"><date /></list>
	        <opt><t>at</t></opt>
	        <list v="hh"><n l="1" h="12" /></list>
	        <any>
	            <t>pm</t>
	            <list><t>p</t><p>.</p><t>m</t><opt><p>.</p></opt></list>
	        </any>
        </pat>
	    <tran>
	        <func name="mkDateTime">
	            <var name="date" />
	            <func name="mkTime">
	                <func name="opPlus"><var name="hh" /><rn v="12" /></func>
	            </func>
	        </func>
	    </tran>
    </stmt> 
    
    <stmt>
        <pat>
            <list v="date"><date /></list>
            <opt><t>at</t></opt>
            <list v="hh"><n l="1" h="12" /></list>
        </pat>
    <tran>
        <func name="mkDateTime"><var name="date" />
            <func name="mkTime"><var name="hh" /></func>
        </func>
    </tran>
    </stmt>    
    
    <stmt>
        <pat>
            <any>
                <list>
                    <list v="date"><date /></list>
                    <opt><t>at</t></opt>
                    <list v="time"><time /></list>
                </list>
                <list>
                    <list v="time"><time /></list>
                    <opt><t>on</t></opt>
                    <list v="date"><date /></list>
                </list>
            </any>
        </pat>
    <tran>
        <func name="mkDateTime"><var name="date" /><var name="time" /></func>
    </tran>
    </stmt>
    <stmt>
        <pat>
	        <any><t>between</t><t>from</t></any>
	        <list v="low"><date /></list>
	        <any><t>and</t><t>until</t><t>till</t><list><p>'</p><t>til</t></list><t>to</t></any>
	        <list v="high"><date /></list>
        </pat>
        <tran>
            <func name="mkRange"><ltrl>ASC</ltrl><var name="low" /><var name="high" /></func>
        </tran>
    </stmt>
    <stmt>
        <pat>
            <any><t>between</t><t>from</t></any>
            <list v="low"><time /></list>
            <any><t>and</t><t>until</t><t>till</t><list><p>'</p><t>til</t></list><t>to</t></any>
            <list v="high"><time /></list>
        </pat>
        <tran>
            <func name="mkRange"><ltrl>ASC</ltrl><var name="low" /><var name="high" /></func>
        </tran>
    </stmt>  
  
  
    <stmt>
        <pat>
            <any><t>between</t><t>from</t></any>
            <list v="low"><range t="t" /></list>
            <any><t>and</t><t>until</t><t>till</t><list><p>'</p><t>til</t></list><t>to</t></any>
            <list v="high"><range t="t" /></list>
        </pat>
        <tran>
            <func name="mkRange">
                <func name="getHigh"><var name="low" /></func>
                <func name="getLow"><var name="high" /></func>
                </func>
        </tran>
    </stmt>  
  
    <stmt>
        <pat>
            <any v="time"><t>on</t><t>last</t><t>this</t><t>next</t></any>
            <list v="wday"><expand n="weekdays" /></list>
        </pat>
        <tran>
            <func name="mkWday">
                <select v="time">
                <case l="last"><rn v="-1" /></case>
                <case l="this"><rn v="0" /></case>
                <case l="next"><rn v="1" /></case>
                <case l="on"><rn v="1" /></case>
                </select>
                <func name="lookupWday"><var name="wday" /></func>
            </func>
        </tran>
    </stmt>
    <stmt>
        <pat><t>evening</t></pat>
        <tran>
            <func name="mkRange">
                <func name="mkTime"><rn v="16" /></func>
                <func name="mkTime"><rn v="23" /><rn v="59" /></func>
            </func>
        </tran>
    </stmt>
	<stmt>
	<pat><t>morning</t></pat>
	<tran>
	  <func name="mkRange">
	      <func name="mkTime"><rn v="4" /></func>
	      <func name="mkTime"><rn v="12" /></func>
	  </func>
	</tran>
	</stmt>
	
	<stmt>
	<pat><t>afternoon</t></pat>
	<tran>
	  <func name="mkRange">
	      <func name="mkTime"><rn v="12" /></func>
	      <func name="mkTime"><rn v="17" /></func>
	  </func>
	</tran>
	</stmt>
	
	<stmt>
	<pat><t>night</t></pat>
	<tran>
	  <func name="mkErc">
	      <func name="mkEnt"><rn v="1" /><rn v="8"/></func>
	      <func name="mkRange">
	          <func name="mkTime"><rn v="23" /></func>
	          <func name="mkTime"><rn v="5" /></func>
	      </func>
	  </func>
	</tran>
	</stmt>
	
	<stmt>
	  <pat><t>next</t><t>week</t></pat>
	  <tran>
	      <func name="mkDateRange">
	          <func name="opDateCalc">
	              <func name="mkDate" />
	              <func name="opMinus">
	                  <rn v="8" />
	                  <func name="getWeekday"><func name="mkDate" /></func>
	              </func>
	          </func>
	          <rn v="6" /><rn v="0" /><rn v="0" />
	      </func>
	</tran>
	</stmt>
	<stmt>
	  <pat><t>last</t><t>week</t></pat>
	  <tran>
	      <func name="mkDateRange">
	          <func name="opDateCalc">
	              <func name="mkDate" />
	              <func name="opMinus">
	                  <rn v="-6" />
	                  <func name="getWeekday"><func name="mkDate" /></func>
	              </func>
	          </func>
	          <rn v="6" /><rn v="0" /><rn v="0" />
	      </func>
	</tran>
	</stmt>  
	<stmt>
	  <pat><t>next</t><t>month</t></pat>
	  <tran>
	      <func name="mkDateRange">
	          <func name="opDateCalc"><!-- adding 1 month to 1th this month -->
	              <func name="mkDate"><rn v="1" /></func>
	              <rn v="0"/>
	              <rn v="1"/>
	          </func>
	          <!-- and making a range month long -->
	          <rn v="0" /><rn v="1" /><rn v="0" />
	      </func>
	</tran>
	</stmt>
	<stmt>
	  <pat><t>last</t><t>month</t></pat>
	  <tran>
	      <func name="mkDateRange">
	          <func name="opDateCalc"><!-- adding 1 month to 1th this month -->
	              <func name="mkDate"><rn v="1" /></func>
	              <rn v="0"/>
	              <rn v="-1"/>
	          </func>
	          <!-- and making a range month long -->
	          <rn v="0" /><rn v="1" /><rn v="0" />
	      </func>
	</tran>
	</stmt>  
	<stmt>
	  <pat><t>next</t><t>year</t></pat>
	  <tran>
	      <func name="mkDateRange">
	          <func name="opDateCalc"><!-- adding 1 year to 1/1/thisYear -->
	              <func name="mkDate"><rn v="1" /><rn v="1" /></func>
	              <rn v="0"/>
	              <rn v="0"/>
	              <rn v="1"/>
	          </func>
	          <!-- and making a range a year long -->
	          <rn v="0" />
	          <rn v="0" />
	          <rn v="1" />
	      </func>
	</tran>
	</stmt>
	<stmt>
	  <pat><t>last</t><t>year</t></pat>
	  <tran>
	      <func name="mkDateRange">
	          <func name="opDateCalc"><!-- adding -1 year to 1/1/thisYear -->
	              <func name="mkDate"><rn v="1" /><rn v="1" /></func>
	              <rn v="0"/>
	              <rn v="0"/>
	              <rn v="-1"/>
	          </func>
	          <!-- and making a range a year long -->
	          <rn v="0" />
	          <rn v="0" />
	          <rn v="1" />
	      </func>
	</tran>
	</stmt>
	<stmt>
	  <pat><t>since</t><list v="date"><range t="d" /></list></pat>
	  <tran>
	  <func name="mkRange">
	      <func name="getHigh"><var name="date" /></func>
	      <func name="mkDate" />
	  </func>
	  </tran>  
	</stmt>
	
	<stmt>
	  <pat><t>since</t><list v="date"><date /></list></pat>
	  <tran>
	      <func name="mkRange"><var name="date" /><func name="mkDate" /></func>
	  </tran>  
	</stmt>
	
	<stmt>
	  <pat>
	      <any>
	          <t>until</t>
	          <list><opt><p>'</p></opt><any><t>til</t><t>till</t></any></list>
	          <t>by</t>
	      </any>
	      <list v="date"><date /></list></pat>
	  <tran>
	      <func name="mkRange"><func name="mkDate" /><var name="date" /></func>
	  </tran>  
	</stmt>

    <stmt>
        <pat>
            <list v="r"><range t="i" /></list>
            <any>
                <t>pm</t>
                <list>
                    <t>p</t><p>.</p><t>m</t><opt><p>.</p></opt>
                </list>
            </any>
        </pat>
        <tran>
            <func name="mkRange">
                <func name="mkTime">
                    <func name="opPlus">
                        <rn v="12" />
                        <func name="getLow"><var name="r" /></func>
                    </func>
                </func>
                <func name="mkTime">
                    <func name="opPlus">
                        <rn v="12" />
                        <func name="getHigh"><var name="r" /></func>
                    </func>
                </func>
            </func>
        </tran>
    </stmt>
    <stmt>
        <pat>
            <list v="time"><range t="t" /></list>
            <opt><t>on</t></opt>
            <list v="date"><date /></list>
        </pat>
        <tran>
            <func name="mkRange">
                <func name="mkDateTime">
                    <var name="date" /> 
                    <func name="getLow"><var name="time" /></func>
                </func>
                <func name="mkDateTime">
                    <var name="date" /> 
                    <func name="getHigh"><var name="time" /></func>
                </func>
            </func>
        </tran>    
    </stmt>  

    <stmt>
        <pat>
            <list v="date"><date /></list>
            <opt><t>on</t></opt>
            <list v="time"><range t="t" /></list>
        </pat>
        <tran>
            <func name="mkRange">
                <func name="mkDateTime">
                    <var name="date" /> 
                    <func name="getLow"><var name="time" /></func>
                </func>
                <func name="mkDateTime">
                    <var name="date" /> 
                    <func name="getHigh"><var name="time" /></func>
                </func>
            </func>
        </tran>    
    </stmt>  
    <stmt>
        <pat>
            <t>before</t>
            <list v="time"><time /></list>
        </pat>
        <tran>
            <func name="mkRange"><func name="mkTime"><rn v="0" /><rn v="0" /></func><var name="time" /></func>
        </tran>    
    </stmt>
    <stmt>
        <pat>
            <t>after</t>
            <list v="time"><time /></list>
        </pat>
        <tran>
            <func name="mkRange"><var name="time" /><func name="mkTime"><rn v="23" /><rn v="59" /></func></func>
        </tran>    
    </stmt>
    <stmt>
        <pat>
            <t>after</t>
            <list v="dt"><dtim/></list>
        </pat>
        <tran>
            <func name="mkRange"><var name="time" /><func name="mkTime"><rn v="23" /><rn v="59" /></func></func>
        </tran>    
    </stmt>
    
    <stmt>
        <pat>
            <perm>
	            <list v="time"><range t="t" /></list>
                <list v="wday"><expand n="weekdays" /></list>
            </perm>
         </pat>
         <tran>
            <func name="mkRange">
                <func name="mkDateTime">
                    <func name="getLow"><var name="time" /></func>
                    <func name="mkWday">
                        <rn v="1" />
                        <func name="lookupWday"><var name="wday" /></func>
                    </func>
                </func>
                <func name="mkDateTime">
                    <func name="getHigh"><var name="time" /></func>
                    <func name="mkWday">
                        <rn v="1" />
                        <func name="lookupWday"><var name="wday" /></func>
                    </func>
                </func>
            </func>
         </tran>
    </stmt>
    
    <stmt>
        <pat>
            <perm>
                <list v="time"><time /></list>
                <list v="wday"><expand n="weekdays" /></list>
           </perm>
         </pat>
         <tran>
             <func name="mkDateTime">
	             <var name="time" />
	             <func name="mkWday">
	                 <rn v="1" />
	                 <func name="lookupWday"><var name="wday" /></func>
	             </func>
            </func>
         </tran>
    </stmt>
    
    <stmt>
        <pat>
            <any><t>from</t><t>between</t></any>
            <list v="hh1"><n l="1" h="12" /></list>
            <any>
				<t>and</t><t>to</t>
				<t>until</t>
				<list><opt><p>'</p></opt><any><t>til</t><t>till</t></any></list>
            </any>
            <list v="hh2"><n l="1" h="12" /></list>
            <any>
                <t>pm</t>
                <list>
                    <t>p</t><p>.</p><t>m</t><opt><p>.</p></opt>
                </list>
            </any>
        </pat>
        <tran>
            <func name="mkRange">
                <func name="mkTime"><func name="opPlus"><rn v="12" /><var name="hh1" /></func></func>
                <func name="mkTime"><func name="opPlus"><rn v="12" /><var name="hh2" /></func></func>
            </func>
        </tran>
    </stmt>
    
    <stmt>
        <pat>
            <perm>
                <list v="time"><range t="t" /></list>
                <list v="date"><range t="d" /></list>
            </perm>
        </pat>
        <tran>
            <func name="mkErcExpr"><ltrl>AND</ltrl>
                <func name="mkERC">
                    <mkent i="DATE_INTERVAL" c="1" s="8" />
                    <var name="date" />
                </func>
                <func name="mkERC">
                    <mkent i="TIME_INTERVAL" c="1" s="8" />
                    <var name="time" />
                </func>
            </func>
        </tran>
    </stmt>
    <!-- stmt>
        <pat>
            <t>in</t><list v="mon"><expand n="month-names" /></list>
        </pat>
        <tran>
            <func name="mkDateRange">
	            <func name="mkDate">
	                <rn v="1" />
	                <func name="lookupMonth"><var name="mon" /></func>
	            </func>
	            <rn v="-1" /><rn v="1" /><rn v="0" />
            </func>
        </tran>
    </stmt -->
    <stmt>
        <pat>
            <any v="time"><t>in</t><t>last</t><t>this</t><t>next</t></any>
            <list v="mon"><expand n="month-names" /></list>
        </pat>
        <tran>
            <func name="mkDateRange">
                <func name="setMDay">         
                    <func name="mkMonth">
                        <select v="time">
                        <case l="last"><rn v="-1" /></case>
                        <case l="this"><rn v="0" /></case>
                        <case l="next"><rn v="1" /></case>
                        <case l="in"><rn v="1" /></case>
                        </select>
                        <func name="lookupMonth"><var name="mon" /></func>
                    </func>
                    <rn v="1" />
                </func>
                <rn v="-1" /><rn v="1" />
            </func>
        </tran>
    </stmt>    
    
    <stmt>
        <pat>
            <any><t>since</t><t>after</t></any>
            <list v="mon"><expand n="month-names" /></list>
        </pat>
        <tran>
            <func name="mkRange">
                <func name="setMDay">         
                    <func name="mkMonth">
                        <rn v="-1" />
                        <func name="lookupMonth"><var name="mon" /></func>
                    </func>
                    <rn v="1" />
               </func>
               <func name="mkDate" />
           </func>
        </tran>
    </stmt>       
    <stmt>
        <pat>
            <any><t>until</t><t>before</t><t>by</t></any>
            <list v="mon"><expand n="month-names" /></list>
        </pat>
        <tran>
            <func name="mkRange">
                <func name="mkDate" />
                <func name="setMDay">         
                    <func name="mkMonth">
                        <rn v="1" />
                        <func name="lookupMonth"><var name="mon" /></func>
                    </func>
                    <rn v="1" />
               </func>
           </func>
        </tran>
    </stmt>     
    <stmt>
        <pat>
            <t>between</t>
            <list v="low"><expand n="month-names" /></list>
            <t>and</t>
            <list v="high"><expand n="month-names" /></list>
        </pat>
        <tran>
            <func name="mkRange">
                <func name="mkDate">
                    <rn v="1" />
                    <func name="lookupMonth"><var name="low" /></func>
                </func>
                <func name="mkDate">
                    <rn v="1" />
                    <func name="lookupMonth"><var name="high" /></func>
                </func>
            </func>
        </tran>
    </stmt>
    <stmt>
        <pat>
            <list v="date"><date /></list>
            <any><t>-</t><t>through</t></any>
            <list v="day"><n l="1" h="31" /></list>
            <opt><expand n="numeral-suffices" /></opt>
        </pat>
        <tran>
            <func name="mkRange">
                <var name="date" />
                <func name="setMDay">
                    <var name="date" />
                    <var name="day" />
                </func>
            </func>
        </tran>
    </stmt>
    <stmt>
        <pat>
            <t>between</t>
            <list v="day"><n l="1" h="31" /></list>
            <opt><expand n="numeral-suffices" /></opt>
            <t>and</t>
            <list v="date"><date /></list>          
        </pat>
        <tran>
            <func name="mkRange">
                <func name="setMDay">
                    <var name="date" />
                    <var name="day" />
                </func>
                <var name="date" />
            </func>        
        </tran>
    </stmt>
    <stmt>
        <pat>
            <list v="range"><range t="i" /></list>
            <opt><expand n="numeral-suffices" /></opt>
            <t>of</t>
            <list v="mon"><expand n="month-names" /></list>          
        </pat>
        <tran>
            <func name="mkRange">
                <func name="mkDate">
                    <func name="getLow"><var name="range" /></func>
                    <func name="lookupMonth"><var name="mon" /></func>
                </func>
                <func name="mkDate">
                    <func name="getHigh"><var name="range" /></func>
                    <func name="lookupMonth"><var name="mon" /></func>
                </func>
            </func>        
        </tran>
    </stmt>    
    
    <!-- only a temporary rule
    should get removed after https://github.com/barzerman/barzer/issues/76 is resolved -->    
<stmt>
    <pat>
        <t>between</t>
        <list v="low"><range t="d"/></list>
        <t>and</t>
        <list v="high"><range t="d" /></list>
    </pat>
    <tran>
        <func name="mkRange">
            <func name="getLow"><var name="low" /></func>
            <func name="getHigh"><var name="high" /></func>            
        </func>
    </tran>
</stmt>    
</stmset>
